local GuiLibrary = {}

GuiLibrary.__index = GuiLibrary

function GuiLibrary.new(name)
    local self = setmetatable({}, GuiLibrary)
    self.name = name
    self.buttons = {}
    self.toggles = {}
    self.visible = true
    return self
end

function GuiLibrary:addButton(options)
    if #self.buttons >= 10 then return end
    table.insert(self.buttons, {
        name = options.name or "Button",
        keybind = options.keybind or nil,
        callback = options.callback or function() end
    })
end

function GuiLibrary:addToggle(options)
    if #self.toggles >= 10 then return end
    table.insert(self.toggles, {
        name = options.name or "Toggle",
        state = options.state or false,
        callback = options.callback or function() end
    })
end

function GuiLibrary:render()
    print("Rendering GUI: " .. self.name)
    for _, button in ipairs(self.buttons) do
        print("Button: " .. button.name)
    end
    for _, toggle in ipairs(self.toggles) do
        print("Toggle: " .. toggle.name .. " State: " .. tostring(toggle.state))
    end
end

function GuiLibrary:setVisible(state)
    self.visible = state
end

return GuiLibrary
